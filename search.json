[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/medley.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"medley: Predictive Modeling with Missing Data","text":"predictive modeling strategies require complete data train predict outcomes. common strategy impute missing data training models. However, many situations, missing data occurs systematic way therefore violating missing completely random (MCAR) assumption. instance, data may collected multiple time periods available data may vary depending varying collection protocols selection bias individual level. medley package provides framework estimating predictive model takes account patterns missing data. motivating example approach predictive modeling comes predicting student success college. Institutions become increasingly interested using predictive models identify students risk attrition early possible order provided targeted interventions supports. Information students collected several months beginning college application phase, commitment enroll, orientation, finally behavior data student begins coursework. addition missing data related student process, students may opt provide certain data elements. results complex system single predictive model appropriate.","code":""},{"path":"/articles/medley.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data Source","title":"medley: Predictive Modeling with Missing Data","text":"paper explore data Diagnostic Assessment Achievement College Skills (DAACS; https://daacs.net). DAACS suite technological social supports designed optimize student learning. Students complete assessments self-regulated learning, writing, mathematics, reading upon completion receive immediate feedback terms developing, emerging, mastering. feedback tailored results. data paper part larger randomized control trial DAACS embedded within orientation treatment students. Although students instructed orientation required, consequences completing orientation therefore approximately 43% students attempt orientation, therefore complete DAACS. goal predicted term--term retention (retained variable) student based upon available data. Table @ref(tab:descriptives) descriptive statistics reveals DAACS results complete students. overall retention rate 56.17%. Descriptive Statistics","code":""},{"path":"/articles/medley.html","id":"missing-data-patterns","dir":"Articles","previous_headings":"Data Source","what":"Missing Data Patterns","title":"medley: Predictive Modeling with Missing Data","text":"begin first explore patterns missing data. Figure @ref(fig:upset) UpSet plot (Gu, Eils, Schlesner 2016) created shadow matrix1. vertical line corresponds set, combination, variables. dots indicate variable included set. bars top correspond number observations set bars right correspond total number observed values. largest set includes demographics variables, second largest included demographics DAACS variables. third set includes self-regulated learning along demographics worth considering since contains 10% observations. noted potential fourth set included demographic variables along three DAACS variables (SRL, reading, math). However, since set fewer 10% observations use three set/model solution. UpSet plot missing data","code":"shadow_matrix <- as.data.frame(!is.na(daacs)) ComplexHeatmap::make_comb_mat(shadow_matrix) |> ComplexHeatmap::UpSet()"},{"path":"/articles/medley.html","id":"data-preparation","dir":"Articles","previous_headings":"Data Source","what":"Data Preparation","title":"medley: Predictive Modeling with Missing Data","text":"perform predictive modeling split data training (70%) validation (30%) data sets.","code":"set.seed(2112); train_rows <- sample(nrow(daacs), nrow(daacs) * 0.7) daacs_train <- daacs[train_rows,] daacs_valid <- daacs[-train_rows,]"},{"path":"/articles/medley.html","id":"baseline-models","dir":"Articles","previous_headings":"","what":"Baseline Models","title":"medley: Predictive Modeling with Missing Data","text":"generally two choices estimating models missing data: 1) Model using available data 2) Impute missing data modeling.","code":""},{"path":"/articles/medley.html","id":"using-available-data","dir":"Articles","previous_headings":"Baseline Models","what":"Using available data","title":"medley: Predictive Modeling with Missing Data","text":"DAACS data set depicted Figure @ref(fig:upset) demographics variables observed students. start train logistic regression model training data. can get predicted values validation data set print confusion matrix. overall accuracy using demographic variables 61.09%","code":"lr_out <- glm(data = daacs_train,               formula = retained ~ income + employment + ell + ed_mother + ed_father +                 ethnicity + gender + military + age,               family = binomial(link = 'logit')) rf_out <- randomForest(formula = factor(retained) ~ income + employment + ell + ed_mother + ed_father +                          ethnicity + gender + military + age,                        data = daacs_train) lr_predictions <- predict(lr_out, newdata = daacs_valid, type = 'response') confusion_matrix(observed = daacs_valid$retained,                  predicted = lr_predictions > 0.5) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 295 (19.07%) 386 (24.95%) #>       TRUE 216 (13.96%) 650 (42.02%) #> Accuracy: 61.09%  rf_predictions <- predict(rf_out, newdata = daacs_valid, type = 'response') confusion_matrix(observed = daacs_valid$retained,                  predicted = rf_predictions) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 279 (18.03%) 402 (25.99%) #>       TRUE 251 (16.22%) 615 (39.75%) #> Accuracy: 57.79%"},{"path":"/articles/medley.html","id":"mean-imputation","dir":"Articles","previous_headings":"Baseline Models","what":"Mean Imputation","title":"medley: Predictive Modeling with Missing Data","text":"","code":"daacs_complete_mean <- daacs for(i in 2:ncol(daacs_complete_mean)) {     missing_rows <- is.na(daacs_complete_mean[,i])     if(sum(missing_rows) > 0) {         daacs_complete_mean[missing_rows, i] <- mean(daacs_complete_mean[,i], na.rm = TRUE)     } } daacs_train_complete_mean <- daacs_complete_mean[train_rows,] daacs_valid_complete_mean <- daacs_complete_mean[-train_rows,]  mean_lr_out <- glm(formula = retained ~ .,                    data = daacs_train_complete_mean,                    family = binomial(link = logit)) mean_lr_predictions <- predict(mean_lr_out, newdata = daacs_valid_complete_mean, type = 'response') confusion_matrix(observed = daacs_valid_complete_mean$retained,                  predicted = mean_lr_predictions > 0.5) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 292 (18.88%) 389 (25.15%) #>       TRUE 212 (13.70%) 654 (42.28%) #> Accuracy: 61.15%  mean_rf_out <- randomForest(formula = factor(retained) ~ .,                             data = daacs_train_complete_mean) mean_rf_predictions <- predict(mean_rf_out, newdata = daacs_valid_complete_mean, type = 'response') confusion_matrix(observed = daacs_valid_complete_mean$retained,                  predicted = mean_rf_predictions) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 316 (20.43%) 365 (23.59%) #>       TRUE 178 (11.51%) 688 (44.47%) #> Accuracy: 64.9%"},{"path":"/articles/medley.html","id":"multiple-imputation","dir":"Articles","previous_headings":"Baseline Models","what":"Multiple imputation","title":"medley: Predictive Modeling with Missing Data","text":"Another common approach modeling missing data multiple imputation. mice package (Multivariate Imputations Chained Equations) robust popular approach imputing missing data. simplicity use final imputed data set comparison2. missing DAACS data imputed can train logistic regression model using full data set. overall accuracy using imputed data set 61.41%","code":"mice_out <- mice::mice(daacs[,-1], M = 5, seed = 2112, printFlag = FALSE) daacs_complete_mice <- cbind(retained = daacs$retained, mice::complete(mice_out))  daacs_train_complete_mice <- daacs_complete_mice[train_rows,] daacs_valid_complete_mice <- daacs_complete_mice[-train_rows,] mice_lr_out <- glm(formula = retained ~ .,                    data = daacs_train_complete_mice,                    family = binomial(link = logit)) mice_lr_predictions <- predict(mice_lr_out, newdata = daacs_valid_complete_mice, type = 'response') confusion_matrix(observed = daacs_valid_complete_mice$retained,                  predicted = mice_lr_predictions > 0.5) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 297 (19.20%) 384 (24.82%) #>       TRUE 213 (13.77%) 653 (42.21%) #> Accuracy: 61.41%  mice_rf_out <- randomForest(formula = factor(retained) ~ .,                             data = daacs_train_complete_mice) mice_rf_predictions <- predict(mice_rf_out, newdata = daacs_valid_complete_mice, type = 'response') confusion_matrix(observed = daacs_valid_complete_mice$retained,                  predicted = mice_rf_predictions) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 278 (17.97%) 403 (26.05%) #>       TRUE 207 (13.38%) 659 (42.60%) #> Accuracy: 60.57%"},{"path":"/articles/medley.html","id":"medley-models","dir":"Articles","previous_headings":"","what":"Medley models","title":"medley: Predictive Modeling with Missing Data","text":"medley_train function implements step wise approach training models. data formula parameters specify data set full model (.e. possible predictor variables considered), similar modeling functions R. method parameter indicates model procedure used. example estimate logistic regression models. medley_train can take additional parameters need passed method function. Table @ref(tab:model-summaries) provides baseline retention rate model along number observations formula models. exploring specific modeling reveals pattern missing data predictive success. Students complete four DAACS assessments % likely retained students complete assessments. Baseline retention rate model object returned medley_train contains following elements: n_models - number models estimated. formulas - list formulas used model. models - list containing model output model. example contain results glm function call. data - full data set used train models. model_observations - data frame indicating models observation used . rows correspond rows data columns correspond model. default algorithm use sets least 10% total observations (see @ref(tab:model-summaries)). can adjusted using min_set_size parameter (see get_variable_sets() function). Optionally can specify models directly passing list formulas var_sets parameter. Table @ref(tab:modelresults) provides model summaries 3 models estimated. (#tab:modelresults) Logistic regression results S3 generic function predict implemented. Specifying newdata parameter give predictions validation data set. confusion matrix provided . overall accuracy medley model 61.086% 5.11% baseline, null, model.","code":"medley_lr_out <- medley_train(data = daacs_train,                               formula = retained ~ .,                               method = glm,                               family = binomial(link = logit)) medley_lr_predictions <- predict(medley_lr_out,                                  newdata = daacs_valid,                                  type = 'response') confusion_matrix(observed = daacs_valid$retained,                  predicted = medley_lr_predictions > 0.5) #>               predicted              #>   observed        FALSE         TRUE #>      FALSE 306 (19.78%) 375 (24.24%) #>       TRUE 174 (11.25%) 692 (44.73%) #> Accuracy: 64.51%"},{"path":"/articles/medley.html","id":"random-forests","dir":"Articles","previous_headings":"Medley models","what":"Random Forests","title":"medley: Predictive Modeling with Missing Data","text":"core functionality medley_train algorithm select appropriate model given available data. specific predictive model user. Fernandez-Delgado et al (2014) evaluated performance 179 classifiers across 121 data sets. results showed , general, random forest best performing model. begin, load randomForest pacakge convert dependent variable factor ensure classification (versus regression) model estimated. Training predicting except set method = randomForest. Lastly, confusion matrix gives overall accuracy. example though see random forest performs sligthly worse logistic regression.","code":"daacs_train$retained <- as.factor(daacs_train$retained) daacs_valid$retained <- as.factor(daacs_valid$retained) medley_rf_out <- medley_train(data = daacs_train,                               formula = retained ~ .,                               method = randomForest) medley_rf_predictions <- predict(medley_rf_out,                                   newdata = daacs_valid,                                  type = \"response\") confusion_matrix(observed = daacs_valid$retained,                  predicted = medley_rf_predictions ) #>               predicted              #>   observed            1            2 #>      FALSE 320 (20.69%) 361 (23.34%) #>       TRUE 194 (12.54%) 672 (43.44%) #> Accuracy: 64.12%"},{"path":"/articles/medley.html","id":"using-observations-in-multiple-models","dir":"Articles","previous_headings":"Medley models","what":"Using observations in multiple models","title":"medley: Predictive Modeling with Missing Data","text":"default behavior medley_train algorithm observation used one model. However, particular example, complete demographic data students potentially use observations train model. exclusive_membership parameter allow observations used training models complete data. results show get modest increase overall accuracy. noted predictions estimated model uses variables observation.","code":"medley_rf_out2 <- medley_train(data = daacs_train,                               formula = retained ~ .,                               exclusive_membership = FALSE,                               method = randomForest) medley_rf_predictions2 <- predict(medley_rf_out2,                            newdata = daacs_valid,                           type = \"response\") confusion_matrix(observed = daacs_valid$retained,                  predicted = medley_rf_predictions2 ) #>               predicted              #>   observed            1            2 #>      FALSE 234 (15.13%) 447 (28.89%) #>       TRUE  110 (7.11%) 756 (48.87%) #> Accuracy: 63.99%"},{"path":"/articles/medley.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"medley: Predictive Modeling with Missing Data","text":"Model performance summary Note: Improvement difference overall retention rate 56.17%.","code":"Predicted                                                         Model Observed        FALSE         TRUE Accuracy  Observed data only logistic regression    FALSE 295 (19.07%) 386 (24.95%)                                                      TRUE 216 (13.96%) 650 (42.02%)                                                                                       61.09%        Observed data only random forest    FALSE 279 (18.03%) 402 (25.99%)                                                      TRUE 251 (16.22%) 615 (39.75%)                                                                                       57.79%    Imputed data set logistic regression    FALSE 297 (19.20%) 384 (24.82%)                                                      TRUE 213 (13.77%) 653 (42.21%)                                                                                       61.41%          Imputed data set random forest    FALSE 278 (17.97%) 403 (26.05%)                                                      TRUE 207 (13.38%) 659 (42.60%)                                                                                       60.57%         Medley with logistic regression    FALSE 306 (19.78%) 375 (24.24%)                                                      TRUE 174 (11.25%) 692 (44.73%)                                                                                       64.51%               Medley with random forest    FALSE 320 (20.69%) 361 (23.34%)                                                      TRUE 194 (12.54%) 672 (43.44%)                                                                                       64.12%"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Bryer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryer J (2025). medley: Predictive Modeling Missing Data. R package version 0.9.0, https://github.com/jbryer/medley/.","code":"@Manual{,   title = {medley: Predictive Modeling with Missing Data},   author = {Jason Bryer},   year = {2025},   note = {R package version 0.9.0},   url = {https://github.com/jbryer/medley/}, }"},{"path":"/index.html","id":"medley-predictive-modeling-with-missing-data","dir":"","previous_headings":"","what":"Predictive Modeling with Missing Data","title":"Predictive Modeling with Missing Data","text":"Author: Jason Bryer, Ph.D. jason@bryer.orgWebsite: https://jbryer.github.io/medley/ predictive modeling strategies require missing data model estimation. missing data, generally two strategies working missing data: 1.) exclude variables (columns) observations (rows) missing data; 2.) impute missing data. However, data often missing systematic ways. Excluding data training ignoring potentially predictive information many imputation procedures missing completely random (MCAR) assumption violated. medley package implements solution modeling systematic patterns missingness. working example predicting student retention larger study Diagnostic Assessment Achievement College Skills (DAACS) explored. study, demographic data collected enrollment students students completed diagnostic assessments self-regulated learning (SRL), writing, mathematics, reading first weeks semester. Although students expected complete DAACS, consequence therefore large percentage student completed none assessments. resulting dataset three predominate response patterns: 1.) students completed four assessments, 2.) students completed SRL assessment, 3). students complete assessments. goal medley algorithm take advantage missing data patterns. example, medley algorithm trained three predictive models: 1.) demographics plus four assessments, 2.) demographics plus SRL assessment, 3.) demographics . training prediction, model used student based upon data available. , student completed SRL, model 2 used. medley algorithm can used statistical models. study, logistic regression random forest used. accuracy medley algorithm 3.5% better using complete data 3.1% better using dataset missing data imputed using mice package. medley package provides approach predictive modeling using training prediction framework R users accustomed using. numerous parameters can modified including underlying statistical models used training. Additional diagnostic functions available explore missing data patterns.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predictive Modeling with Missing Data","text":"can install development version medley like :","code":"remotes::install_github('jbryer/medley')"},{"path":"/reference/accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the accuracy rate. — accuracy","title":"Calculate the accuracy rate. — accuracy","text":"function provides overall accuracy rate two vectors.","code":""},{"path":"/reference/accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the accuracy rate. — accuracy","text":"","code":"accuracy(observed, predicted)"},{"path":"/reference/accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the accuracy rate. — accuracy","text":"observed vector observed values. predicted vector predicted values.","code":""},{"path":"/reference/accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the accuracy rate. — accuracy","text":"accuracy numeric value.","code":""},{"path":"/reference/calculate_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the statistics for receiver operating characteristic curve — calculate_roc","title":"Calculate the statistics for receiver operating characteristic curve — calculate_roc","text":"function adapted Raffel (https://github.com/joyofdata): https://github.com/joyofdata/joyofdata-articles/blob/master/roc-auc/calculate_roc.R","code":""},{"path":"/reference/calculate_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the statistics for receiver operating characteristic curve — calculate_roc","text":"","code":"calculate_roc(predictions, observed, cost_of_fp = 1, cost_of_fn = 1, n = 100)  # S3 method for class 'roc' summary(object, digits = 3, ...)  # S3 method for class 'roc' plot(x, curve = \"accuracy\", ...)"},{"path":"/reference/calculate_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the statistics for receiver operating characteristic curve — calculate_roc","text":"predictions predicted values. observed actual observed outcomes. cost_of_fp cost false positive. cost_of_fn cost false negative. n number steps estimate. object result [calculate_roc()]. digits number digits print. ... currently unused. x result [calculate_roc()]. curve values can cost, accuracy, NULL.","code":""},{"path":"/reference/calculate_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the statistics for receiver operating characteristic curve — calculate_roc","text":"ggplot2 expression.","code":""},{"path":"/reference/combine_confusion_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple confusion matrices into a single table. — combine_confusion_matrices","title":"Combine multiple confusion matrices into a single table. — combine_confusion_matrices","text":"combine multiple confusion matrices single table ideal comparing performance across multiple models.","code":""},{"path":"/reference/combine_confusion_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple confusion matrices into a single table. — combine_confusion_matrices","text":"","code":"combine_confusion_matrices(..., digits = 2)"},{"path":"/reference/combine_confusion_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple confusion matrices into a single table. — combine_confusion_matrices","text":"... results [confusion_matrix()]. parameters named used row names matrix. digits number digits.","code":""},{"path":"/reference/confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a confusion matrix — confusion_matrix","title":"Calculate a confusion matrix — confusion_matrix","text":"Calculate confusion matrix","code":""},{"path":"/reference/confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a confusion matrix — confusion_matrix","text":"","code":"confusion_matrix(observed, predicted)  # S3 method for class 'confusionmatrix' as.data.frame(x, row.names = NULL, optional = FALSE, digits = 2, ...)  # S3 method for class 'confusionmatrix' print(x, digits = 2, ...)"},{"path":"/reference/confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a confusion matrix — confusion_matrix","text":"observed vector observed values. predicted vector predicted values. x result [confusion_matrix()]. row.names used. optional used. digits number decimal places print. ... currently used.","code":""},{"path":"/reference/confusion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a confusion matrix — confusion_matrix","text":"data.frame confusion matrix.","code":""},{"path":"/reference/daacs.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","title":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","text":"data part larger randomized control trial designed test effect DAACS student success. data treatment group large online college. DAACS embedded within orientation. Although students expected complete orientation consequences . result DAACS data missing large proportion students.","code":""},{"path":"/reference/daacs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","text":"","code":"daacs"},{"path":"/reference/daacs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","text":"## `daacs` data frame 5,154 observations 14 variables. retained whether student retained second semester srl student's self-regulated learning score math student's mathematics score reading student's reading score writing student's writing score income student's income level ordered factor employment student's employment status ell whether student English Language Learner ed_mother highest education level student's mother ed_father highest education level student's father ethnicity ethnicity student gender gender student military whether student active military age age student time enrollment","code":""},{"path":"/reference/daacs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","text":"https://daacs.net","code":""},{"path":"/reference/daacs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data from the Diagnostic Assessment and Achievement of College Skills (DAACS) — daacs","text":"information DAACS, see https://daacs.net.","code":""},{"path":"/reference/expand_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that will expand the formula if the independent variable(s) are not full specified. — expand_formula","title":"Utility function that will expand the formula if the independent variable(s) are not full specified. — expand_formula","text":"function add independent variables formula formula specified `y ~ .`.","code":""},{"path":"/reference/expand_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that will expand the formula if the independent variable(s) are not full specified. — expand_formula","text":"","code":"expand_formula(formula, data)"},{"path":"/reference/expand_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that will expand the formula if the independent variable(s) are not full specified. — expand_formula","text":"formula formula expand. data data.frame formula applied .","code":""},{"path":"/reference/expand_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function that will expand the formula if the independent variable(s) are not full specified. — expand_formula","text":"formula independent variables specified explicitly.","code":""},{"path":"/reference/get_variable_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets list of model formulas based upon the missing data pattern in the data set. — get_variable_sets","title":"Gets list of model formulas based upon the missing data pattern in the data set. — get_variable_sets","text":"Gets list model formulas based upon missing data pattern data set.","code":""},{"path":"/reference/get_variable_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets list of model formulas based upon the missing data pattern in the data set. — get_variable_sets","text":"","code":"get_variable_sets(data, formula, min_set_size = 0.1)  # S3 method for class 'variableset' print(x, ...)"},{"path":"/reference/get_variable_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets list of model formulas based upon the missing data pattern in the data set. — get_variable_sets","text":"data data.frame. formula formula includes possible variables consider predictive models. min_set_size minimum set size percentage include model. x results `get_variable_sets()`. ... currently unused.","code":""},{"path":"/reference/get_variable_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets list of model formulas based upon the missing data pattern in the data set. — get_variable_sets","text":"list formulas, order used, predictive models.","code":""},{"path":"/reference/medley_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Train models using different combinations of predictor variables based upon missing data patterns. — medley_train","title":"Train models using different combinations of predictor variables based upon missing data patterns. — medley_train","text":"Train models using different combinations predictor variables based upon missing data patterns.","code":""},{"path":"/reference/medley_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train models using different combinations of predictor variables based upon missing data patterns. — medley_train","text":"","code":"medley_train(   data,   formula,   method = glm,   var_sets = get_variable_sets(data = data, formula = formula, min_set_size =     min_set_size),   min_set_size = 0.1,   exclusive_membership = TRUE,   ... )  # S3 method for class 'medley' summary(object, ...)  # S3 method for class 'medley' print(x, ...)  # S3 method for class 'medley' predict(object, newdata, ...)"},{"path":"/reference/medley_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train models using different combinations of predictor variables based upon missing data patterns. — medley_train","text":"data data.frame used estimate models. formula possible predictor varaibles considered. method function used train models (e.g. glm, randomForest). var_sets list formulas use predictive models. min_set_size minimum set size percentage incldue model. exclusive_membership whether observation used model predictor variables available. `FALSE` observations may used training one model. ... parameters passed `predict()` function. object results `medley_train`. x results `medley_train`. newdata (optional) new data.frame get predictions .","code":""},{"path":"/reference/medley_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train models using different combinations of predictor variables based upon missing data patterns. — medley_train","text":"object following elements: n_models number models trained. formulas list formulas used train models. models list objects returned training method. data data.frame used train models. model_observations data.frame specifies observations used model(s). vector predictions.","code":""}]
